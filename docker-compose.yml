version: '3.4'
services:

  #indypool should be created beforehand, with schemas and credentials issued for user auth
  #  indypool:
  #    network_mode: host
  #    image: "teamblockchain/indy-pool:1.7.0"
  #    ports:
  #      - "9701-9708:9701-9708"
  #    container_name: indypool

  cordabaseimage:
    network_mode: host
    build:
      context: ./devops/profile/develop
      dockerfile: Dockerfile-corda
      target: libindyjava
    image: libindyjava

# -------------------- Corda nodes -----------------------
  notary:
    network_mode: host
    build:
      context: ./build/nodes/Notary
      dockerfile: Dockerfile-corda
    ports:
      - "10001:10001"
      - "10002:10002"
      - "10003:10003"
    container_name: notary
    deploy:
      resources:
        limits:
          memory: 500m

# -------------------- Spring nodes -----------------------
  hospitalweb:
    network_mode: host
    build:
      context: ./webapp
      dockerfile: Dockerfile-web
    ports:
      - "8081:8081"
    environment:
      - "SPRING_PROFILES_ACTIVE=swagger"
      - "indy_trustedCredentialsIssuerDID=XXdcqNCR9EkhpGwosNkF58"
    container_name: hospitalweb
    deploy:
      resources:
        limits:
          memory: 50m

  # -------------------- Indy agents -----------------------
  agent94:
    image: teamblockchain/indy-agent-python:2a838e3
    ports:
      - "8094:8094"
    environment:
      - "PORT=8094"
      - "HOST=172.100.100.1"
    container_name: agent94

  agent95:
    image: teamblockchain/indy-agent-python:2a838e3
    ports:
      - "8095:8095"
    environment:
      - "PORT=8095"
      - "HOST=172.100.100.1"
    container_name: agent95

networks:
  agents:
    driver: bridge
    ipam:
      config:
        - subnet: 172.100.100.0/24