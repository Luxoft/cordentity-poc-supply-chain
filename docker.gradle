buildscript {
    ext.docker_plugin_version = "0.9.4"

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "com.avast.gradle:gradle-docker-compose-plugin:$docker_plugin_version"
    }
}

apply plugin: com.avast.gradle.dockercompose.DockerComposePlugin

//TODO: Figure out how to clean images of docker build removeImages="Local" doesn`t work
dockerCompose {
    projectName = name
    baseimages {
        startedServices = ['cordabaseimage']
    }
    backends {
        projectName = name
        startedServices = ['tcweb', 'mfweb']
    }
    corda {
        projectName = name
        startedServices = ['notary', 'tccorda', 'mfcorda']
    }
    agents {
        projectName = name
        startedServices = ['agent95', 'agent96', 'agentInitiator']
    }
    cordaComposeUp.doLast {
        sleep(60 * 1000)
    }
    backendsComposeUp.doLast {
        sleep(60 * 1000)
    }
    backendsComposeUp.shouldRunAfter(cordaComposeUp)
    cordaComposeUp.shouldRunAfter(agentsComposeUp)
    baseimagesComposeBuild.dependsOn("bootstrap")
    cordaComposeBuild.dependsOn("bootstrap")
    cordaComposeBuild.dependsOn(baseimagesComposeBuild)
    cordaComposeBuild.mustRunAfter(baseimagesComposeBuild)
    backendsComposeBuild.dependsOn(":webapp:assemble")
    backendsComposeBuild.dependsOn("bootstrap")
    backendsComposeBuild.mustRunAfter(baseimagesComposeBuild)
    backendsComposeDown.mustRunAfter(":webapp:test")
//    backendsComposeDown.mustRunAfter(":webapp:integrationTest")
    backendsComposeDown.doLast { backendsDockerImagesClean.execute() }
    cordaComposeDown.mustRunAfter(backendsComposeDown)
    cordaComposeDown.doLast { cordaDockerImagesClean.execute() }
    composeDown.mustRunAfter(cordaComposeDown)

    useComposeFiles = ["$rootDir/docker-compose.yml"]
    removeImages = "Local"
}
def dockerCleanParam = ["bash", "-c", "docker rmi -f \$(docker images -q ${project.name.toLowerCase()}_*); true"]

//This is because gradle don`t execute same tasks on one run
task backendsDockerImagesClean(type: Exec, group: "docker") {
    commandLine dockerCleanParam
}

task cordaDockerImagesClean(type: Exec, group: "docker") {
    commandLine dockerCleanParam
}
