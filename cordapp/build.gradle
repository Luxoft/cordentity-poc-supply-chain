buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "net.corda.plugins:cordapp:${corda_gradle_plugins_version}"
        classpath "net.corda.plugins:cordformation:${corda_gradle_plugins_version}"
        classpath "net.corda.plugins:quasar-utils:${corda_gradle_plugins_version}"
    }
}
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

cordapp {
    signing {
        enabled false
    }
}

sourceSets {
    main {
        resources {
            srcDir "config/dev"
        }
    }
    test {
        resources {
            srcDir "config/test"
        }
    }
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/kotlin')
        }
    }
}

dependencies {
    cordaCompile("com.github.${cordentity_provider}.cordentity:cordentity-cordlib:$cordentity_version") {
        transitive = false
    }
    cordaCompile("com.github.${cordentity_provider}.cordentity:cordentity-cordlib-contracts-states:$cordentity_version") {
        transitive = false
    }

    // todo: replace with 'api'
    // leaks com.luxoft.blockchainlab.hyperledger.indy.models.ProofInfo
    compile "com.github.${cordentity_provider}.cordentity:cordentity-indy-utils:$cordentity_version"

    // leaks com.luxoft.blockchainlab.corda.hyperledger.indy.AgentConnection
    compile "com.github.${cordentity_provider}.cordentity:cordentity-agent-connection:$cordentity_version"
    compile "net.java.dev.jna:jna:$jna_version"

    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    // Corda integration dependencies
    cordaCompile "net.corda:corda-core:${corda_release_version}"
    cordaCompile "net.corda:corda-confidential-identities:4.0"
    cordaCompile "net.corda:corda-rpc:${corda_release_version}"
    cordaCompile "net.corda:corda-node-api:${corda_release_version}"
    cordaRuntime "net.corda:corda:${corda_release_version}"

    testImplementation "net.corda:corda-node-driver:4.0"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.assertj:assertj-core:$assertj_version"
    testImplementation "org.slf4j:slf4j-simple:$slf4j_version"
}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

