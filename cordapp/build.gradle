buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "net.corda.plugins:cordapp:${corda_gradle_plugins_version}"
        classpath "net.corda.plugins:cordformation:${corda_gradle_plugins_version}"
        classpath "net.corda.plugins:quasar-utils:${corda_gradle_plugins_version}"
    }
}
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

sourceSets {
    main {
        resources {
            srcDir "config/dev"
        }
    }
    test {
        resources {
            srcDir "config/test"
        }
    }
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/kotlin')
        }
    }
}

dependencies {
    cordaCompile "com.github.hyperledger-labs.cordentity:cordentity-cordlib:$cordentity_version"
    cordaCompile "com.github.hyperledger-labs.cordentity:cordentity-cordlib-contracts-states:$cordentity_version"
    
    compile "com.github.hyperledger-labs.cordentity:cordentity-indy-utils:$cordentity_version"
    compile "com.github.hyperledger-labs.cordentity:cordentity-agent-connection:$cordentity_version"
    compile 'net.java.dev.jna:jna:4.5.1'

    implementation 'com.github.alexeykoren:konfig:2.0.4'

    // Corda integration dependencies
    cordaCompile "${corda_release_group}:corda-core:${corda_release_version}"
    cordaCompile "${corda_release_group}:corda-finance:${corda_release_version}"
    cordaCompile "${corda_release_group}:corda-rpc:${corda_release_version}"
    cordaCompile "${corda_release_group}:corda-node-api:${corda_release_version}"
    cordaRuntime "${corda_release_group}:corda:${corda_release_version}"

    testCompile "${corda_release_group}:corda-node-driver:${corda_release_version}"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"
    testCompile "org.assertj:assertj-core:3.10.0"

    // app specific deps
    implementation 'com.corundumstudio.socketio:netty-socketio:1.7.13'

    // push
    implementation 'com.google.firebase:firebase-admin:6.2.0'

}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

task initInventoryAWS(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.luxoft.rpc.RPCClient'
    args = ['54.175.244.82:10003', '34.228.61.142:10003', '34.235.129.45:10003', '52.201.230.41:10003']
}

task initInventoryLocalhost(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.luxoft.rpc.RPCClient'
    args = ['127.0.0.1:10009'/*, '127.0.0.1:10109'*/]
}

apply from: "$rootDir/indy-run.gradle"

